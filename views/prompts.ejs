<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generador de prompts</title>
    <link rel="stylesheet" href="chats.css">
</head>
<body>
    <div class="container">
        <div class="messages" id="messages">
            <!-- Los mensajes de chat se agregarán aquí -->
        </div>
        <form id="message-form">
            <input type="text" id="user-input" placeholder="Escribe tu mensaje aquí...">
            <button class="send-button" type="submit">Enviar</button>
        </form>
    </div>
    <script>
        const form = document.getElementById('message-form');
const input = document.getElementById('user-input');
const messages = document.getElementById('messages');

form.addEventListener('submit', (e) => {
    e.preventDefault();
    sendMessage();
});

async function sendMessage() {
    const messageText = input.value.trim();

    if (messageText.length === 0) return;

    // Crear y mostrar mensaje del usuario
    const userMessage = document.createElement('div');
    userMessage.classList.add('message', 'user-message');
    userMessage.textContent = messageText;
    messages.appendChild(userMessage);

    input.value = '';
    scrollToBottom();

    // Enviar el mensaje a la API de OpenAI
    const response = await fetch('/api/prompts', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ message: messageText })
    });
    const { reply } = await response.json();

    // Crear y mostrar mensaje del asistente
    const assistantMessage = document.createElement('div');
    assistantMessage.classList.add('message', 'assistant-message');
    assistantMessage.textContent = reply;
    messages.appendChild(assistantMessage);

    scrollToBottom();
}

function scrollToBottom() {
    messages.scrollTop = messages.scrollHeight;
}
    </script>
</body>
</html>